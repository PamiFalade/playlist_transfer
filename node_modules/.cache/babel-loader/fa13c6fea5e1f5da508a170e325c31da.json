{"ast":null,"code":"var _jsxFileName = \"/Users/pamilerinfalade/Desktop/FrontEnd_Challenges/playlist-transfer/src/Landing.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport \"./Views/LandingViews.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { useFormik } from \"formik\";\nimport { Buffer } from \"buffer\";\nimport { fetchPlaylist, setupToken } from \"./models/webService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  //show variable for displaying the modal that takes the playlist link and call the handleTransfer function\n  const [showLinkModal, setShowLinkModal] = useState(false);\n\n  const handleShowLinkModal = () => setShowLinkModal(true);\n\n  const handleCloseLinkModal = () => setShowLinkModal(false); //show variable for displaying the modal that displays the playlist that was fetched from the source platform\n\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const handleShowConfirmModal = () => setShowConfirmModal(true);\n\n  const handleCloseConfirmModal = () => setShowConfirmModal(false); //source and dest variables to represent the origin platform and destination platform of the playlist respectively\n\n\n  const [source, setSource] = useState(\"\");\n  const [dest, setDest] = useState(\"\"); //sets source and dest variables\n\n  const handleTransfer = (source, dest) => {\n    setSource(source);\n    setDest(dest);\n  }; //variable to hold the access token\n\n\n  const [sourceToken, setSourceToken] = useState(\"\"); //Link that has been entered into\n\n  const playlistLink = \"\"; //Object that will hold relevant info on the playlist to be transferred\n\n  const [playlist, setPlaylist] = useState({\n    name: \"\"\n  }); //Formik to manage and validate inputted link\n\n  const initialValues = {\n    link: \"\"\n  };\n\n  const onSubmit = values => {\n    //Step 1: get access token for source platform\n    setupToken(source).then(promise => {\n      //By making setupToken an async function, you made it so that it returns a promise. So, it needs to be treated as such\n      setSourceToken(promise.token); //Use this function to notify when source token has been updated\n      //Step 2: retrieve playlist from source platform\n\n      fetchPlaylist(values.link, promise.token, source).then(retrievedPlaylist => {\n        let foundPlaylist = {\n          name: retrievedPlaylist.name,\n          image: retrievedPlaylist.images[1].url,\n          owner: retrievedPlaylist.owner.display_name,\n          tracks: retrievedPlaylist.tracks.items.map(song => {\n            return {\n              songName: song.track.name,\n              isExplicit: song.track.explicit,\n              songAlbum: song.track.album.name,\n              songAlbumImg: song.track.album.images[2],\n              songArtists: [...song.track.artists],\n              sourceURI: song.track.uri,\n              destURI: \"\"\n            };\n          })\n        };\n        setPlaylist(foundPlaylist);\n      }).catch(error => console.log(error));\n    }); //TO-DO: I probably need to make use of the useEffect() method to manage how things will render AFTER the data that has been fetched has finished loading into state variables\n    //Step 2: retrieve playlist from source platform\n  };\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.link) {}\n  };\n\n  const linkForm = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"Landing\",\n      border: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"LandingBody\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          border: \"primary\",\n          className: \"transferOption\",\n          onClick: () => {\n            handleShowLinkModal();\n            handleTransfer(\"apple\", \"spotify\");\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://pbs.twimg.com/profile_images/1431129444362579971/jGrgSKDD_400x400.jpg\",\n              className: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://toppng.com/uploads/preview/right-arrow-icon-ico-11562931718i8rqgsef9d.png\",\n              className: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Spotify_logo_without_text.svg/800px-Spotify_logo_without_text.svg.png\",\n              className: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          border: \"primary\",\n          className: \"transferOption\",\n          onClick: () => {\n            handleShowLinkModal();\n            handleTransfer(\"spotify\", \"apple\");\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Spotify_logo_without_text.svg/800px-Spotify_logo_without_text.svg.png\",\n              className: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://toppng.com/uploads/preview/right-arrow-icon-ico-11562931718i8rqgsef9d.png\",\n              className: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://pbs.twimg.com/profile_images/1431129444362579971/jGrgSKDD_400x400.jpg\",\n              className: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showLinkModal,\n      onHide: handleCloseLinkModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Let's transfer!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: () => {\n            handleCloseLinkModal();\n            linkForm.handleSubmit();\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Share Link for Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"link\",\n            id: \"link\",\n            type: \"url\",\n            placeholder: \"Enter the link to the playlist\",\n            onChange: linkForm.handleChange,\n            value: linkForm.values.link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseLinkModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            handleCloseLinkModal();\n            linkForm.handleSubmit();\n          },\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: handleCloseConfirmModal,\n      backdrop: \"static\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"This Playlist?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: playlist.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseConfirmModal,\n          children: \"Nope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCloseConfirmModal,\n          children: \"Yes!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Landing, \"Oey3OGAIXSRMr8l6A8BD/i+l0sY=\", false, function () {\n  return [useFormik];\n});\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/Users/pamilerinfalade/Desktop/FrontEnd_Challenges/playlist-transfer/src/Landing.js"],"names":["React","useState","Card","Modal","Button","Form","useFormik","Buffer","fetchPlaylist","setupToken","Landing","showLinkModal","setShowLinkModal","handleShowLinkModal","handleCloseLinkModal","showConfirmModal","setShowConfirmModal","handleShowConfirmModal","handleCloseConfirmModal","source","setSource","dest","setDest","handleTransfer","sourceToken","setSourceToken","playlistLink","playlist","setPlaylist","name","initialValues","link","onSubmit","values","then","promise","token","retrievedPlaylist","foundPlaylist","image","images","url","owner","display_name","tracks","items","map","song","songName","track","isExplicit","explicit","songAlbum","album","songAlbumImg","songArtists","artists","sourceURI","uri","destURI","catch","error","console","log","validate","errors","linkForm","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\nimport \"./Views/LandingViews.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { useFormik } from \"formik\";\nimport { Buffer } from \"buffer\";\nimport { fetchPlaylist, setupToken } from \"./models/webService\";\n\nconst Landing = () => {\n  //show variable for displaying the modal that takes the playlist link and call the handleTransfer function\n  const [showLinkModal, setShowLinkModal] = useState(false);\n  const handleShowLinkModal = () => setShowLinkModal(true);\n  const handleCloseLinkModal = () => setShowLinkModal(false);\n\n  //show variable for displaying the modal that displays the playlist that was fetched from the source platform\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const handleShowConfirmModal = () => setShowConfirmModal(true);\n  const handleCloseConfirmModal = () => setShowConfirmModal(false);\n\n  //source and dest variables to represent the origin platform and destination platform of the playlist respectively\n  const [source, setSource] = useState(\"\");\n  const [dest, setDest] = useState(\"\");\n  //sets source and dest variables\n  const handleTransfer = (source, dest) => {\n    setSource(source);\n    setDest(dest);\n  };\n\n  //variable to hold the access token\n  const [sourceToken, setSourceToken] = useState(\"\");\n\n  //Link that has been entered into\n  const playlistLink = \"\";\n  //Object that will hold relevant info on the playlist to be transferred\n  const [playlist, setPlaylist] = useState({name: \"\", });\n\n  //Formik to manage and validate inputted link\n  const initialValues = {\n    link: \"\",\n  };\n\n  const onSubmit = (values) => {\n    //Step 1: get access token for source platform\n    setupToken(source).then((promise) => {\n      //By making setupToken an async function, you made it so that it returns a promise. So, it needs to be treated as such\n      setSourceToken(promise.token); //Use this function to notify when source token has been updated\n\n      //Step 2: retrieve playlist from source platform\n      fetchPlaylist(values.link, promise.token, source)\n        .then((retrievedPlaylist) => {\n          let foundPlaylist = {\n          name: retrievedPlaylist.name,\n          image: retrievedPlaylist.images[1].url,\n          owner: retrievedPlaylist.owner.display_name,\n          tracks: retrievedPlaylist.tracks.items.map((song) => {\n            return {\n              songName: song.track.name,\n              isExplicit: song.track.explicit,\n              songAlbum: song.track.album.name,\n              songAlbumImg: song.track.album.images[2],\n              songArtists: [...song.track.artists],\n              sourceURI: song.track.uri,\n              destURI: \"\",\n            };\n          })}\n          setPlaylist(foundPlaylist);\n        })\n        .catch((error) => console.log(error));\n    }); //TO-DO: I probably need to make use of the useEffect() method to manage how things will render AFTER the data that has been fetched has finished loading into state variables\n\n    //Step 2: retrieve playlist from source platform\n  };\n\n  const validate = (values) => {\n    let errors = {};\n\n    if (!values.link) {\n    }\n  };\n\n  const linkForm = useFormik({ initialValues, onSubmit, validate });\n\n  return (\n    <div>\n      <Card className=\"Landing\" border=\"primary\">\n        <Card.Header>\n          <Card.Title>Welcome!</Card.Title>\n        </Card.Header>\n        <Card.Body className=\"LandingBody\">\n          <Card\n            border=\"primary\"\n            className=\"transferOption\"\n            onClick={() => {\n              handleShowLinkModal();\n              handleTransfer(\"apple\", \"spotify\");\n            }}\n          >\n            <Card.Body>\n              <img\n                src=\"https://pbs.twimg.com/profile_images/1431129444362579971/jGrgSKDD_400x400.jpg\"\n                className=\"Logo\"\n              />\n              <img\n                src=\"https://toppng.com/uploads/preview/right-arrow-icon-ico-11562931718i8rqgsef9d.png\"\n                className=\"Logo\"\n              />\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Spotify_logo_without_text.svg/800px-Spotify_logo_without_text.svg.png\"\n                className=\"Logo\"\n              />\n            </Card.Body>\n          </Card>\n          <Card\n            border=\"primary\"\n            className=\"transferOption\"\n            onClick={() => {\n              handleShowLinkModal();\n              handleTransfer(\"spotify\", \"apple\");\n            }}\n          >\n            <Card.Body>\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Spotify_logo_without_text.svg/800px-Spotify_logo_without_text.svg.png\"\n                className=\"Logo\"\n              />\n              <img\n                src=\"https://toppng.com/uploads/preview/right-arrow-icon-ico-11562931718i8rqgsef9d.png\"\n                className=\"Logo\"\n              />\n              <img\n                src=\"https://pbs.twimg.com/profile_images/1431129444362579971/jGrgSKDD_400x400.jpg\"\n                className=\"Logo\"\n              />\n            </Card.Body>\n          </Card>\n        </Card.Body>\n      </Card>\n\n      <Modal show={showLinkModal} onHide={handleCloseLinkModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Let's transfer!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            onSubmit={() => {\n              handleCloseLinkModal();\n              linkForm.handleSubmit();\n            }}\n          >\n            <Form.Label>Share Link for Playlist</Form.Label>\n            <Form.Control\n              name=\"link\"\n              id=\"link\"\n              type=\"url\"\n              placeholder=\"Enter the link to the playlist\"\n              onChange={linkForm.handleChange}\n              value={linkForm.values.link}\n            />\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseLinkModal}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              handleCloseLinkModal();\n              linkForm.handleSubmit();\n            }}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showConfirmModal}\n        onHide={handleCloseConfirmModal}\n        backdrop=\"static\"\n      >\n        <Modal.Header>\n          <Modal.Title>This Playlist?</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <img src={playlist.image} />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseConfirmModal}>\n            Nope\n          </Button>\n          <Button variant=\"primary\" onClick={handleCloseConfirmModal}>\n            Yes!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}